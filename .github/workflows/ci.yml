# CI/CD Pipeline Configuration 
name: CI/CD Pipeline

# Workflow triggers
# Runs on push to main branch and pull requests
on:
  push:
    branches: [ main ]  # Trigger on main branch updates
  pull_request:
    branches: [ main ]  # Trigger on PRs to main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: student-management-app
  ECS_SERVICE: student-management-service
  ECS_CLUSTER: nci-student-app
  CONTAINER_NAME: student-app

jobs:
  #Implements automated testing 
  test:
    runs-on: ubuntu-latest  # Use Ubuntu runner
    env:
      CI: true
      RAILS_ENV: test

    steps:
    # Checks out repository code
    - uses: actions/checkout@v3
    
    # Sets up Ruby environment
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2.2'  # Ruby version
        bundler-cache: true    # Cache dependencies
    
    # Install Chrome
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    # Configure Bundler
    - name: Configure Bundler
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    
    # Installs the project dependencies
    - name: Install dependencies
      run: |
        gem install bundler
        bundle install
    
    # Runs the unit and integration tests
    - name: Run tests
      run: |
        bundle exec rails test:system
      env:
        RAILS_ENV: test
        CI: true

    # Configure AWS CLI
    - name: Configure AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
        mkdir -p ~/.aws
        echo "[default]
        aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region=us-east-1" > ~/.aws/credentials
        aws configure list

    # Deploy to EC2
    - name: Deploy to EC2
      uses: easingthemes/ssh-deploy@v4
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        REMOTE_HOST: ${{ secrets.EC2_HOST }}
        REMOTE_USER: ${{ secrets.EC2_USERNAME }}
        SOURCE: "./"
        TARGET: "/home/${{ secrets.EC2_USERNAME }}/app"
        SCRIPT_BEFORE: |
          whoami
          pwd
        SCRIPT_AFTER: |
          cd /home/${{ secrets.EC2_USERNAME }}/app
          chmod +x setup-ec2.sh setup-security-group.sh
          ./setup-security-group.sh
          ./setup-ec2.sh

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
        mkdir -p ~/.aws
        echo "[default]
        aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region=${{ env.AWS_REGION }}" > ~/.aws/credentials
        aws configure list

    - name: Configure Security Group
      run: |
        chmod +x ./setup-security-group.sh
        ./setup-security-group.sh

    - name: Copy setup script to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "setup-ec2.sh"
        target: "/home/ubuntu"

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          chmod +x ~/setup-ec2.sh
          ~/setup-ec2.sh
