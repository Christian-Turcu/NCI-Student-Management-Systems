name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

# Deployment workflow with Rails master key configuration
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > myKey.pem
          chmod 600 myKey.pem

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} "echo Connected Successfully!"

      - name: Deploy to EC2
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} << 'EOF'
            set -e
            
            # Update system packages and install required dependencies
            sudo apt-get update -y
            sudo apt-get install -y ruby-dev build-essential libssl-dev zlib1g-dev libyaml-dev

            # Create app directory if it doesn't exist
            sudo mkdir -p /home/ubuntu/app
            cd /home/ubuntu/app

            # Ensure proper ownership
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app

            # Clone repository if it doesn't exist, otherwise pull latest changes
            if [ ! -d ".git" ]; then
              git clone https://github.com/Christian-Turcu/NCI-Student-Management-Systems.git .
            else
              git pull origin main
            fi

            # Install Bundler with sudo
            sudo gem install bundler -v 2.5.23

            # Install gems with sudo
            sudo bundle install --no-deployment

            # Set up database.yml for production
            cat > config/database.yml << 'DBCONFIG'
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: db/development.sqlite3

test:
  <<: *default
  database: db/test.sqlite3

production:
  <<: *default
  database: db/production.sqlite3
DBCONFIG

            # Set up secrets.yml for production
            cat > config/secrets.yml << 'SECRETS'
production:
  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>
SECRETS

            # Generate a secret key base
            SECRET_KEY_BASE=$(bundle exec rake secret)
            export SECRET_KEY_BASE

            # Create production database if it doesn't exist
            RAILS_ENV=production bundle exec rails db:create || true

            # Run database migrations
            RAILS_ENV=production bundle exec rails db:migrate

            # Precompile assets
            RAILS_ENV=production bundle exec rails assets:precompile

            # Kill any existing Rails server
            pkill -f "rails server" || true

            # Start the Rails server
            RAILS_ENV=production SECRET_KEY_BASE=$SECRET_KEY_BASE bundle exec rails server -d -b 0.0.0.0

            echo "Deployment Complete!"
          EOF

      - name: Clean up
        run: |
          rm -f myKey.pem
