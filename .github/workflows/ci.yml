name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > myKey.pem
          chmod 600 myKey.pem

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} "echo Connected Successfully!"

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} << 'EOF'
            set -e
            
            # Update system packages and install required dependencies
            sudo apt-get update -y
            sudo apt-get install -y ruby-dev build-essential libssl-dev zlib1g-dev

            # Create app directory if it doesn't exist
            sudo mkdir -p /home/ubuntu/app
            cd /home/ubuntu/app

            # Ensure proper ownership
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app

            # Clean up existing bundle directory
            sudo rm -rf vendor/bundle

            # Clone repository if it doesn't exist, otherwise pull latest changes
            if [ ! -d ".git" ]; then
              git clone https://github.com/Christian-Turcu/NCI-Student-Management-Systems.git .
            else
              git pull origin main
            fi

            # Install Bundler with sudo
            sudo gem install bundler -v 2.5.23

            # Install gems with sudo
            sudo bundle install

            # Ensure proper ownership of all files
            sudo chown -R ubuntu:ubuntu .

            # Install Ruby and Bundler
            if ! command -v ruby &> /dev/null; then
              sudo apt-get install -y ruby
            fi

            # Ensure Bundler is installed
            if ! command -v bundle &> /dev/null; then
              echo "Installing Bundler..."
            fi

            # Set correct permissions
            chmod +x bin/rails
            chmod +x bin/bundle

            # Stop any running servers
            sudo systemctl stop puma || true
            pkill -f puma || true

            # Run database migrations
            RAILS_ENV=production bundle exec rails db:migrate

            # Start the server
            sudo systemctl start puma
            
            echo "Deployment Complete!"
          EOF

      - name: Clean up
        run: |
          rm -f myKey.pem
