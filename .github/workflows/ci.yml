name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > myKey.pem
          chmod 600 myKey.pem

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} "echo Connected Successfully!"

      - name: Deploy to EC2
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          # First, write the master key to a local file
          echo -n "$RAILS_MASTER_KEY" > master.key
          
          # Copy the master key to the server
          scp -o StrictHostKeyChecking=no -i myKey.pem master.key ubuntu@${{ secrets.EC2_ELASTIC_IP }}:/tmp/master.key
          
          # Now run the deployment script
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} << 'EOF'
            set -e
            
            # Update system packages and install required dependencies
            sudo apt-get update -y
            sudo apt-get install -y ruby-dev build-essential libssl-dev zlib1g-dev git curl
          
            # Create app directory if it doesn't exist
            sudo mkdir -p /home/ubuntu/app
            cd /home/ubuntu/app
          
            # Ensure proper ownership
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app
          
            # Clone repository if it doesn't exist, otherwise pull latest changes
            if [ ! -d ".git" ]; then
              git clone https://github.com/Christian-Turcu/NCI-Student-Management-Systems.git .
            else
              git pull origin main
            fi
          
            # Install Bundler
            sudo gem install bundler -v 2.5.23
          
            # Install gems
            bundle config set --local deployment 'true'
            bundle config set --local without 'development test'
            bundle install --quiet
          
            # Set up Rails environment
            export RAILS_ENV=production
          
            # Set up master key
            mkdir -p config
            # Ensure the master key is exactly 32 characters (16 bytes)
            echo -n "$RAILS_MASTER_KEY" | cut -c1-32 > config/master.key
            chmod 600 config/master.key
          
            # Clean up any existing credentials
            rm -f config/credentials.yml.enc
            rm -f config/credentials/production.yml.enc
            
            # Generate new credentials with proper master key
            EDITOR="echo 'secret_key_base: $(openssl rand -hex 32)'" bundle exec rails credentials:edit
          
            # Database setup
            bundle exec rails db:migrate RAILS_ENV=production
          
            # Precompile assets
            bundle exec rails assets:precompile
          
            # Kill any existing Rails server
            pkill -f "rails server" || true
          
            # Start the Rails server
            bundle exec rails server -d -b 0.0.0.0 -p 3000
          
            echo "Deployment Complete!"
          EOF

      - name: Clean up
        run: |
          rm -f myKey.pem
          rm -f master.key
