# CI/CD Pipeline Configuration 
name: CI/CD Pipeline

# Workflow triggers
# Runs on push to main branch and pull requests
on:
  push:
    branches: [ main ]  # Trigger on main branch updates
  pull_request:
    branches: [ main ]  # Trigger on PRs to main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: student-management-app
  ECS_SERVICE: student-management-service
  ECS_CLUSTER: nci-student-app
  CONTAINER_NAME: student-app

jobs:
  #Implements automated testing 
  test:
    runs-on: ubuntu-latest  # Use Ubuntu runner
    env:
      CI: true
      RAILS_ENV: test

    steps:
    # Checks out repository code
    - uses: actions/checkout@v3
    
    # Sets up Ruby environment
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2.2'  # Ruby version
        bundler-cache: true    # Cache dependencies
    
    # Install Chrome
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    # Configure Bundler
    - name: Configure Bundler
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    
    # Runs the unit and integration tests
    - name: Run tests
      run: |
        bundle exec rails test:system
      env:
        RAILS_ENV: test
        CI: true

    # Setup SSH Debug
    - name: Setup SSH Debug
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/debug_key
        chmod 600 ~/.ssh/debug_key
        echo "=== SSH Key Info ==="
        ssh-keygen -l -f ~/.ssh/debug_key || echo "Invalid key format"
        echo "=== Key Format Check ==="
        head -n 1 ~/.ssh/debug_key
        echo "=== Converting key to OpenSSH format ==="
        ssh-keygen -p -N "" -m PEM -f ~/.ssh/debug_key
        rm ~/.ssh/debug_key

    # Install SSH key
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    # Add host key
    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts
        echo "=== Testing SSH connection ==="
        ssh -vvv ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful' && ls -la ~/.ssh/"

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    env:
      CI: true
      RAILS_ENV: production

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to EC2
        id: deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # Install AWS CLI
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

          # Get instance ID from public IP
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=ip-address,Values=$EC2_HOST" \
            --query "Reservations[].Instances[?State.Name=='running'].InstanceId[]" \
            --output text)

          echo "ðŸš€ Starting deployment to instance $INSTANCE_ID..."

          # Use AWS Systems Manager to run commands
          aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --parameters commands=["cd /home/$EC2_USERNAME/app && git pull origin main && chmod +x setup-ec2.sh && ./setup-ec2.sh"] \
            --comment "Deploy application"

          echo "âœ… Deployment command sent successfully!"
