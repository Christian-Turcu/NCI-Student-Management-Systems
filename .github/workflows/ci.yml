name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > myKey.pem
          chmod 600 myKey.pem

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} "echo Connected Successfully!"

      - name: Deploy to EC2
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i myKey.pem ubuntu@${{ secrets.EC2_ELASTIC_IP }} "RAILS_MASTER_KEY=${RAILS_MASTER_KEY}" << 'EOF'
            set -e
            
            # Update system packages and install required dependencies
            sudo apt-get update -y
            sudo apt-get install -y ruby-dev build-essential libssl-dev zlib1g-dev git curl

            # Create app directory if it doesn't exist
            sudo mkdir -p /home/ubuntu/app
            cd /home/ubuntu/app

            # Ensure proper ownership
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app

            # Clone repository if it doesn't exist, otherwise pull latest changes
            if [ ! -d ".git" ]; then
              git clone https://github.com/Christian-Turcu/NCI-Student-Management-Systems.git .
            else
              git pull origin main
            fi

            # Set up Rails environment
            export RAILS_ENV=production
            export PORT=3000

            # Install Bundler
            sudo gem install bundler -v 2.5.23

            # Install gems
            bundle config set --local deployment 'true'
            bundle config set --local without 'development test'
            bundle install --quiet

            # Ensure directories exist
            mkdir -p config
            mkdir -p tmp/pids
            mkdir -p log

            # Set up master key
            echo "${RAILS_MASTER_KEY}" > config/master.key
            chmod 600 config/master.key

            # Database setup
            RAILS_MASTER_KEY="${RAILS_MASTER_KEY}" bundle exec rails db:migrate RAILS_ENV=production

            # Precompile assets
            RAILS_MASTER_KEY="${RAILS_MASTER_KEY}" bundle exec rails assets:precompile RAILS_ENV=production

            # Kill any existing Rails server and remove old pid file
            pkill -f "rails server" || true
            rm -f tmp/pids/server.pid || true

            echo "Starting Rails server..."
            
            # Start the server in foreground first to catch any immediate errors
            echo "Testing server startup..."
            timeout 5 bundle exec rails server -b 0.0.0.0 -p 3000 -e production || true
            
            echo "Starting server in background..."
            # Start the Rails server with nohup and explicit environment variables
            RAILS_ENV=production RAILS_MASTER_KEY="${RAILS_MASTER_KEY}" nohup bundle exec rails server -b 0.0.0.0 -p 3000 > log/production.log 2>&1 &
            
            # Wait for server to start
            echo "Waiting for server to start..."
            sleep 10
            
            # Detailed debugging information
            echo "=== Process Status ==="
            ps aux | grep rails
            
            echo "=== Network Status ==="
            sudo netstat -tulpn | grep 3000
            
            echo "=== Firewall Status ==="
            sudo ufw status
            
            echo "=== Rails Log ==="
            tail -n 50 log/production.log
            
            echo "=== Testing Local Connection ==="
            curl -v localhost:3000 || true
            
            echo "Deployment Complete!"
          EOF

      - name: Verify Server
        run: |
          echo "Waiting for server to be ready..."
          sleep 15
          echo "Attempting to connect to server..."
          curl -v http://${{ secrets.EC2_ELASTIC_IP }}:3000/ || true

      - name: Clean up
        run: |
          rm -f myKey.pem
